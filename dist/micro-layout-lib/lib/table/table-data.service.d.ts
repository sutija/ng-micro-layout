import { Ng2OrderPipe } from 'ng2-order-pipe';
import { Subject } from 'rxjs';
import { ArrayToChunksPipe } from '../pipes/array.pipe';
import { DataChange, Table, TableRow, TableSchema } from './table.interface';
import { TableService } from './table.service';
export declare class TableDataService {
    private tableService;
    private arrayToChunksPipe;
    private ng2OrderPipe;
    readonly dataChange$: Subject<DataChange>;
    readonly elementSelected$: Subject<any>;
    protected tableData: Subject<Table>;
    protected internalTableData: Table;
    protected schema: TableSchema;
    protected orderBy: String;
    protected orderDir: boolean;
    protected limit: number;
    protected pageNumber: number;
    private data;
    private internalData;
    constructor(tableService: TableService, arrayToChunksPipe: ArrayToChunksPipe, ng2OrderPipe: Ng2OrderPipe);
    setLimit(limit: number): void;
    getHeaders(): TableSchema;
    generateId(index: number): number;
    setData(data: Array<TableRow>, schema: TableSchema): void;
    getData(): Subject<Table>;
    goToPage(pageNumber: number): void;
    protected changeData(): void;
    protected _getLimit(): number;
    protected setColumns(schema: TableSchema, rows: Array<any>): Array<TableRow>;
    itemAdd(data: any): Promise<void>;
    itemEdit(data: any): Promise<void>;
    itemDelete(id: number): Promise<boolean>;
    reorder(orderBy: string): void;
}
